window.onload = function() {
  //<editor-fold desc="Changeable Configuration Block">

  // the following lines will be replaced by docker/configurator, when it runs in a docker-container
  window.ui = SwaggerUIBundle({
    // This line and the next line are the only customizations for the Zalando OpenAPI Editor
    spec: /*intellij-swagger-spec-start*/{"openapi":"3.1.0","info":{"title":"Video hosting","description":"This is a sample of Video hosting REST API","version":"0.0.1"},"servers":[{"url":"https://localhost:8080/api/v0.0.1"}],"tags":[{"name":"user","description":"Operations about user"},{"name":"channel","description":"Operations about channel"},{"name":"subscription","description":"Operations about subscription"}],"paths":{"/users":{"post":{"tags":["user"],"summary":"Create user.","description":"This POST method takes a json as input and creates an object in the database.","operationId":"createUser","requestBody":{"description":"Created user object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"responses":{"201":{"description":"Successful operation. Object created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}}}},"/users/{username}":{"get":{"tags":["user"],"summary":"Show user.","description":"Returns user object in JSON format by name","operationId":"getUserByUsername","parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched.","example":"alex","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}},"put":{"tags":["user"],"summary":"Updated user information.","description":"Update user object in JSON format by name. userName will not be changed","operationId":"updateUser","parameters":[{"name":"username","in":"path","description":"Name of user, that need to be updated","example":"alex","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update an existent user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"responses":{"200":{"description":"Successful operation"},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/users/{username}/channels":{"get":{"tags":["user"],"summary":"User's subscriptions.","description":"Get list of user subscriptions (without pagination, only channelName)","operationId":"getUsersSubscriptions","parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched","example":"alex","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"type":"string","$ref":"#/components/schemas/Channel/properties/name"}}}}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/channels":{"post":{"tags":["channel"],"summary":"Create channel.","description":"This POST method takes a json as input and creates an object in the database.","operationId":"createChannel","requestBody":{"description":"Created channel object","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Channel"}}}},"responses":{"201":{"description":"Successful operation. Object created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Channel"}}}}}},"get":{"tags":["channel"],"summary":"Show list of channels.","description":"Get list of channels with pagination, filter of name, language, cathegory.","operationId":"getChannels","parameters":[{"name":"page","in":"query","description":"Number of displayed page","example":1,"required":false,"schema":{"type":"integer"}},{"name":"nameFilter","in":"query","description":"Filter of name","example":"ChannelName","required":false,"schema":{"type":"string"}},{"name":"languageFilter","in":"query","description":"Filter of language","example":"English","required":false,"schema":{"type":"string"}},{"name":"cathegoryFilter","in":"query","description":"Filter of cathegory","example":"Cats","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","$ref":"#/components/schemas/FilteredChannel"}}}}}}}},"/channels/{name}":{"get":{"tags":["channel"],"summary":"Get channel by name","description":"Get channel information by channel name","operationId":"getChannel","parameters":[{"name":"name","in":"path","description":"The name that needs to be fetched","example":"channelName","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Channel"}}}},"400":{"description":"Invalid channelName supplied"},"404":{"description":"Channel not found"}}},"put":{"tags":["channel"],"summary":"Update channel","description":"Update channel by channel name. ChannelName will not be changed","operationId":"updateChannel","parameters":[{"name":"name","in":"path","description":"Name of Channel that need to be updated","required":true,"schema":{"type":"string"}}],"requestBody":{"description":"Update an existent channel","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Channel"}}}},"responses":{"200":{"description":"successful operation"},"400":{"description":"Invalid channelName supplied"},"404":{"description":"Channel not found"}}}},"/subscriptions":{"post":{"tags":["subscription"],"summary":"Create subscribe","description":"Ð¡reate a user subscription to the channel","operationId":"createSubscription","parameters":[{"name":"username","in":"query","description":"username that need to be create a subscrib","example":"username","required":true,"schema":{"type":"string"}},{"name":"channelName","in":"query","description":"channel to create a subscrib","required":true,"example":"channelName","schema":{"type":"string"}}],"responses":{"201":{"description":"successful operation"},"400":{"description":"Invalid channelName or userName supplied"},"404":{"description":"Channel or user not found"}}},"delete":{"tags":["subscription"],"summary":"Unsubscribe user","description":"Remove a user subscription to the channel","operationId":"removeSubscription","parameters":[{"name":"username","in":"query","description":"username that need to be remove a subscrib","example":"username","required":true,"schema":{"type":"string"}},{"name":"channelName","in":"query","description":"channel to remove a subscrib","example":"channelName","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"successful operation"},"400":{"description":"Invalid channelName or userName supplied"},"404":{"description":"Channel or user not found"}}}}},"components":{"schemas":{"User":{"type":"object","description":"User","properties":{"nickName":{"type":"string","description":"User's nickName","examples":["Nick"]},"username":{"type":"string","description":"User's name","examples":["Name"]},"email":{"type":"string","description":"User's mail","examples":["user@exampleMail.com"]},"subscribes":{"type":"array","description":"User's subscribers list","items":{"type":"object","$ref":"#/components/schemas/Channel"}}}},"Channel":{"type":"object","description":"Channel","properties":{"name":{"type":"string","description":"Channel's name","examples":["ChannelName"]},"descrioption":{"type":"string","description":"Descrioption of channel","examples":["Channel about animals"]},"author":{"type":"object","description":"Author of channel (User)","item":{"$ref":"#/components/schemas/User"}},"subscribers":{"type":"array","description":"List of subscribers (Users)","items":{"type":"object","$ref":"#/components/schemas/User"}},"createdAt":{"type":"string","format":"date-time","description":"CreatedAt","examples":["12.12.2024"]},"language":{"type":"string","description":"Main language","examples":["english"]},"avatar":{"type":"string","description":"Url to the picture","examples":["url.png"]},"cathegory":{"type":"string","description":"Cathegory","examples":["Cats"]}}},"FilteredChannel":{"type":"object","description":"Channel to display in the list","properties":{"name":{"type":"string","description":"Channel's name","examples":["ChannelName"]},"subscribersNumber":{"type":"integer","format":"int64","description":"Number of subscribers","examples":[110000]},"language":{"type":"string","description":"Main language","examples":["english"]},"avatar":{"type":"string","description":"Url to the picture","examples":["url.png"]},"cathegory":{"type":"string","description":"Cathegory","examples":["Cats"]}}}}}}/*intellij-swagger-spec-end*/,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  });

  //</editor-fold>
};
